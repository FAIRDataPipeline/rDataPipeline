
name: R-CMD-CHECK # Name of the project (this is what is displayed on the badge)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: ${{ matrix.os }} Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # fail-fast means should it fail the other job if the one fails
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
    steps:
      - uses: actions/checkout@v2 # Check out the code
      - uses: r-lib/actions/setup-r@master # Nice fast way to setup R
      - uses: r-lib/actions/setup-pandoc@master
      - uses: r-lib/actions/setup-tinytex

      - name: Install System Requirements (macOS)
        run : |
              rm /usr/local/bin/gfortran
              brew install gdal openssl hdf5 udunits proj
        if: matrix.os == 'macos-latest'

      - name: Install System Requirements (Ubuntu)
        run : sudo apt-get install libcurl4-openssl-dev libhdf5-dev libudunits2-dev libproj-dev libgdal-dev texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra -y
        if: matrix.os == 'ubuntu-latest'

      - name: Install required R libraries
        run: |
            install.packages('remotes')
            remotes::install_deps(dependencies = TRUE)
            remotes::install_cran("rcmdcheck")
            install.packages("devtools")
        shell: Rscript {0}

      - name: Install SCRC Data SCRCdataAPI
        run: |
            library(devtools)
            install_github("ScottishCovidResponse/SCRCdataAPI")
        shell: Rscript {0}

      - name: check Debian with Documentation
        run: rcmdcheck::rcmdcheck(error_on = "warning", check_dir = "check")
        shell: Rscript {0}
        if: matrix.os == 'ubuntu-latest'

      - name: check Mac OS
        run: rcmdcheck::rcmdcheck(error_on = "warning", check_dir = "check")
        shell: Rscript {0}
        if: matrix.os == 'macos-latest'
