on:
  push:
    branches:
      - '*'
  workflow_dispatch:
#  pull_request:
#    branches:
#      - master

jobs:
  R-CMD-check:
    # If the commit message isn't [skip ci]
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'release'}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            rcmdcheck
            remotes

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          #architecture: 'x64'
      - name: Checkout FAIRDataPipeline/FAIR-CLI
        uses: actions/checkout@v3
        with:
          repository: FAIRDataPipeline/FAIR-CLI
          path: FAIR-CLI
      - name: Move FAIR-CLI
        run: mv FAIR-CLI ../FAIR-CLI
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install and initialise FAIR CLI on Mac / Ubuntu
        run: |
          cd ../FAIR-CLI
          poetry install
          source .venv/bin/activate
          cd ${{ github.workspace }}
          fair registry install --version main
          fair init --ci
          fair registry start
        if: runner.os != 'Windows'

      - name: Install and initialise FAIR CLI on windows
        run: |
          cd ../FAIR-CLI
          poetry install
          .venv/bin/activate.bat
          cd ${{ github.workspace }}
          fair registry install --version main
          fair init --ci
          fair registry start
        if: runner.os == 'Windows'
        shell: cmd

      - name: Install R API system requirements (macOS-latest)
        if: runner.os == 'macOS'
        run : |
              brew install hdf5
              brew install gdal
      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
          _RUN_TESTS_: true
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}
      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash
      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
